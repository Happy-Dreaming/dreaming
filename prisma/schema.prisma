generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Member {
  id           String    @id @default(cuid())
  name         String?
  email        String?   @unique
  picture      String?
  nickname     String?
  point        Int       @default(0)
  refreshToken String?   @unique
  comments     Comment[]
  diary        Diary[]
}

model Diary {
  id            String    @id @default(cuid())
  title         String    @db.VarChar(1000)
  isShare       Boolean   @default(true)
  created_At    String?
  updated_At    String?
  contents      String    @db.VarChar(5000)
  writerId      String
  writerName    String?
  writerPicture String?
  like          Int       @default(0)
  comments      Comment[]
  writer        Member    @relation(fields: [writerId], references: [id])

  @@index([writerId], map: "Diary_writerId_fkey")
  @@fulltext([title, contents])
}

model Comment {
  id            String    @id @default(cuid())
  writerId      String
  parentId      String?
  diaryId       String
  created_At    String?
  updated_At    String?
  comment       String?
  writerName    String?
  writerPicture String?
  diary         Diary     @relation(fields: [diaryId], references: [id], onDelete: Cascade, map: "CommentDiary_FK")
  parent        Comment?  @relation("ParentChild", fields: [parentId], references: [id], map: "CommentParent_FK")
  children      Comment[] @relation("ParentChild")
  writer        Member    @relation(fields: [writerId], references: [id])

  @@index([diaryId], map: "CommentDiary_FK")
  @@index([parentId], map: "CommentParent_FK")
  @@index([writerId], map: "Comment_writerId_fkey")
}

model Dictionary {
  id       String @id @default(cuid())
  category String
  title    String
  contents String

  @@index([category])
  @@fulltext([title, contents])
}
